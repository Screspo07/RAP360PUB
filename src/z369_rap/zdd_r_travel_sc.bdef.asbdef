managed;
strict ( 2 );
with draft;

define behavior for ZDD_R_TRAVEL_SC alias Travel
implementation in class zbp_dd_r_travel_sc unique
persistent table ztb_travel_sc
draft table ztb_travel_sc_d

lock master //Bloqueo a la entidad maestra
total etag LastChangedAt //Controla las concurrencias
authorization master ( instance, global ) //Controla el acceso sobre la instancia
etag master LastChangedAt
{
  create ( precheck );//Creacion en el padre
  update ( precheck );
  delete;
  association _Booking { create ( features : instance, authorization : update ); with draft; } //creacion para el hijo

  field ( numbering : managed, readonly ) TravelUuid;
  field ( readonly ) TravelId,
  OverallStatus,
  TotalPrice,
  LocalCreatedBy,
  LocalCreatedAt,
  LocalLocalCreatedBy,
  LocalLocalCreatedAt;
  field ( mandatory ) CustomerId,
  CurrencyCode,
  AgencyId,
  BeginDate,
  EndDate;
  field ( features : instance ) BookingFee;


  determination setTravelNumber on save { create; }
  determination setStatusToOpen on modify { create; }
  determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }

  //Boton para el usuario
  action ( features : instance, authorization : update ) acceptTravel result [1] $self;
  action ( features : instance, authorization : update ) rejectTravel result [1] $self;
  action ( features : instance, authorization : update ) deductDiscount
    parameter z369_ae_discount_sc result [1] $self;
  internal action reCalcTotalPrice;

  validation validateCustomer on save { create; field CustomerId; }
  validation validateAgency on save { create; field AgencyId; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateBookingFee on save { create; field BookingFee; }


  determine action validateCustomerID { validation validateCustomer; }
  determine action validateAgencyID { validation validateAgency; }
  determine action validateDateRange { validation validateDates; }

  //Efectos secundarios - Mensajes en vivo por cada validacion
  side effects
  {
    field BookingFee affects field TotalPrice;
    determine action validateCustomerID executed on field CustomerId affects messages;
    determine action validateAgencyID executed on field AgencyId affects messages;
    determine action validateDateRange executed on field BeginDate, field EndDate affects messages;

  }

  draft action Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume with additional implementation;

  draft determine action Prepare
  {

    validation validateCustomer;
    validation validateAgency;
    validation validateDates;
    validation validateBookingFee;

    //validation Booking~validateCustomer;
    //validation Booking~validateConnection;
    //validation Booking~validateCurrency;
    //validation Booking~validateFlightPrice;
    //validation Booking~validateStatus;

    //validation BookingSupplement~validateSupplment;
    //validation BookingSupplement~validateCurrency;
    //validation BookingSupplement~validatePrice;
  }

  //Mapeo ya que los campos no identifica el alias si no el nombre original
  mapping for ztb_travel_sc
    {
      TravelUUID          = travel_uuid;
      TravelID            = travel_id;
      AgencyID            = agency_id;
      CustomerID          = customer_id;
      BeginDate = begin_date;
      EndDate = end_date;
      //BeginDate           = begin_date;
      //EndDate             = end_date;
      BookingFee          = booking_fee;
      TotalPrice          = total_price;
      CurrencyCode        = currency_code;
      Description         = description;
      OverallStatus       = overall_status;
      LocalCreatedBy      = local_created_by;
      LocalCreatedAt      = local_created_at;
      LocalLocalCreatedBy = local_local_created_by;
      LocalLocalCreatedAt = local_local_created_at;
      LastChangedAt       = last_changed_at;
    }

}

define behavior for ZDD_R_BOOKING_SC alias Booking
implementation in class zbp_dd_r_booking unique
persistent table ztb_booking_sc
draft table ztb_booking_sc_d
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;
  association _BookingSupplement { create ( authorization : update ); with draft; }

  association _Travel { with draft; }

  field ( numbering : managed, readonly ) BookingUUID;
  field ( readonly ) TravelUUID, BookingID, BookingDate, LocalLastChangedAt;
  field ( mandatory ) CustomerID, AirlrneID, ConnectionId, FlightDate, FlightPrice, CurrencyCode;

  determination setBookingNumber on save { create; }
  determination setBookingDate on save { create; }
  determination calculateTotalPrice on save { create; field FlightPrice, CurrencyCode; }

  validation validateCustomer on save { create; field CustomerID; }
  validation validateConnetion on save { create; field AirlrneID, ConnectionId, FlightDate; }

  mapping for ztb_booking_sc
    {
      BookingUUID        = booking_uuid;
      TravelUUID         = parent_uuid;
      BookingID          = booking_id;
      BookingDate        = booking_date;
      CustomerID         = customer_id;
      AirlrneID          = carrier_id;
      ConnectionId       = connection_id;
      FlightDate         = flight_date;
      FlightPrice        = flight_price;
      CurrencyCode       = currency_code;
      BookingStatus      = booking_status;
      LocalLastChangedAt = local_last_changed_at;
    }


}

define behavior for ZDD_R_BKSUPPL_SC alias BookingSupplement
implementation in class zbp_dd_r_booksuppl unique
persistent table ztb_bksuppl_sc
draft table ztb_bksuppl_sc_d
lock dependent by _Travel
authorization dependent by _Travel
etag master LocalLastChangedAt
{
  update;
  delete;

  association _Travel { with draft; }
  association _Booking { with draft; }


  field ( numbering : managed, readonly ) BookSupplUUID;
  field ( readonly ) TravelUUID, BookingUUID, BookingSupplementID, LocalLastChangedAt;
  field ( mandatory ) SupplementID, Price, CurrencyCode;

  determination setBookingSupplNumber on save { create; }
  determination calculateTotalPrice on save { create; field Price, CurrencyCode; }

  validation validateSupplement on save { create; field SupplementID; }
  validation validateCurrency on save { create; field CurrencyCode; }
  validation validatePrice on save { create; field Price; }

  determine action validateSupplementPrice { validation validatePrice; }

  side effects
  {
    field Price affects field _Travel.TotalPrice;
    determine action validateSupplementPrice executed on field Price affects messages;
  }

  mapping for ztb_bksuppl_sc
    {
      BookSupplUUID       = booksuppl_uuid;
      TravelUUID          = root_uuid;
      BookingUUID         = parent_uuid;
      BookingSupplementID = booking_supplement_id;
      SupplementID        = supplement_id;
      Price               = price;
      CurrencyCode        = currency_code;
      LocalLastChangedAt  = local_last_changed_at;
    }
}